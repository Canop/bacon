# a bacon.toml file dedicated to the bacon tool

default_job = "check-all"
env.CARGO_TERM_COLOR = "always"

[sound]
enabled = true
volume = "100%" # global volume multiplier

[jobs]

# This alternative to 'check' demontrates the use of the JSON output
# of cargo check - see https://github.com/Canop/bacon/issues/249
[jobs.json-check]
command = [
	"cargo", "check",
	"--message-format", "json-diagnostic-rendered-ansi",
]
need_stdout = true
analyzer = "cargo_json"

[jobs.check]
command = ["cargo", "check"]
need_stdout = false
default_watch = false
watch = ["src"]

[jobs.check-all]
command = [
	"cargo", "check",
	"--all-targets",
]
need_stdout = false
allow_warnings = true
on_success = "play-sound(name=90s-game-ui-6,volume=50)"
on_failure = "play-sound(name=beep-warning,volume=100)"

[jobs.nightly]
command = [
	"cargo",
	"+nightly",
	"check",
	"--all-targets",
]
need_stdout = false

[jobs.win]
command = [
	"cross", "build",
	"--target", "x86_64-pc-windows-gnu",
]

[jobs.test]
command = ["cargo", "test"]
need_stdout = true

[jobs.doc]
command = ["cargo", "doc", "--no-deps"]
need_stdout = false

# If the doc compiles, then it opens in your browser and bacon switches
# to the previous job
[jobs.doc-open]
command = ["cargo", "doc", "--no-deps", "--open"]
need_stdout = false
on_success = "back" # so that we don't open the browser at each change

[jobs.clippy-all]
command = [
	"cargo", "clippy",
	"--",
	"-A", "clippy::bool_to_int_with_if",
	"-A", "clippy::collapsible_else_if",
	"-A", "clippy::collapsible_if",
	"-A", "clippy::derive_partial_eq_without_eq",
	"-A", "clippy::get_first",
	"-A", "clippy::if_same_then_else",
	"-A", "clippy::len_without_is_empty",
	"-A", "clippy::map_entry",
	"-A", "clippy::while_let_on_iterator",
]
need_stdout = false

[keybindings]
c = "job:clippy-all"
ctrl-c = "copy-unstyled-output"
#n = "next-match"
#shift-n = "previous-match"
b = "play-sound(name=car-horn)"
