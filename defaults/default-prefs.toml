# This is a preferences file for the bacon tool
# More info at https://github.com/Canop/bacon

# Uncomment and change the value (true/false) to
# specify whether bacon should start in summary mode
#
# summary = true

# Uncomment and change the value (true/false) to
# specify whether bacon should start with lines wrapped
#
# wrap = false

# In "reverse" mode, the focus is at the bottom, item
# order is reversed, and the status bar is on top
#
# reverse = true

# Uncomment and change the value (true/false) to
# specify whether bacon should show a help line.
#
# help_line = false

# Exporting "locations" lets you use them in an external
# tool, for example as a list of jump locations in an IDE
# or in a language server.
#
# See https://dystroy.org/bacon/config/#export-locations
#
# Set 'enabled' to true to have bacon always export locations
# This is equivalent to always adding -e to bacon commands
# but can still be canceled on specific launches with -E
#
# Possible line_format parts:
#  - kind: warning|error|test 
#  - path: complete absolute path to the file
#  - line: 1-based line number
#  - column: 1-based column
#  - message: description of the item
#  - context: unstyled lines of output, separated with escaped newlines (`\\n`)
[export]
enabled = false
path = ".bacon-locations"
line_format = "{kind} {path}:{line}:{column} {message}"

# Uncomment and change the key-bindings you want to define
# (some of those ones are the defaults and are just here
#  for illustration)
[keybindings]
# esc = "back"
# g = "scroll-to-top"
# shift-g = "scroll-to-bottom"
# k = "scroll-lines(-1)"
# j = "scroll-lines(1)"
# ctrl-c = "quit"
# ctrl-q = "quit"
# q = "quit"
# F5 = "rerun"
# s = "toggle-summary"
# w = "toggle-wrap"
# b = "toggle-backtrace"
# Home = "scroll-to-top"
# End = "scroll-to-bottom"
# Up = "scroll-lines(-1)"
# Down = "scroll-lines(1)"
# PageUp = "scroll-pages(-1)"
# PageDown = "scroll-pages(1)"
# Space = "scroll-pages(1)"
# a = "job:check-all"
# i = "job:initial"
# c = "job:clippy"
# c = "job:clippy-all"
# d = "job:doc-open"
# t = "job:test"
# r = "job:run"
